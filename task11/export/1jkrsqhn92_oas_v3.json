{
  "openapi": "3.0.1",
  "info": {
    "title": "task11_api",
    "version": "2024-05-20T05:03:02Z"
  },
  "servers": [
    {
      "url": "https://1jkrsqhn92.execute-api.eu-central-1.amazonaws.com/{basePath}",
      "variables": {
        "basePath": {
          "default": "api"
        }
      }
    }
  ],
  "paths": {
    "/reservations": {
      "get": {
        "summary": "Get reservations",
        "description": "Get reservations",
        "responses": {
          "200": {
            "description": "Fetched reservations",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReservationsResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "authorizer": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy",
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:905418349556:function:api_handler/invocations",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match"
        }
      },
      "post": {
        "summary": "Create reservation",
        "description": "Create reservation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReservationCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Created reservation",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReservationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "authorizer": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy",
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:905418349556:function:api_handler/invocations",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match"
        }
      }
    },
    "/tables": {
      "get": {
        "summary": "Get tables",
        "description": "Get tables",
        "responses": {
          "200": {
            "description": "Fetched tables",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TablesResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "authorizer": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy",
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:905418349556:function:api_handler/invocations",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match"
        }
      },
      "post": {
        "summary": "Create table",
        "description": "Create table",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TableCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Created table",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TableCreateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "authorizer": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy",
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:905418349556:function:api_handler/invocations",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match"
        }
      }
    },
    "/signin": {
      "post": {
        "summary": "Sign in",
        "description": "Sign in",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignInRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Succeeded. Returns access token.",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignInResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy",
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:905418349556:function:api_handler/invocations",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match"
        }
      }
    },
    "/signup": {
      "post": {
        "summary": "Sign up",
        "description": "Sign up",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignUpRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Succeeded",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Empty"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy",
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:905418349556:function:api_handler/invocations",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match"
        }
      }
    },
    "/tables/{tableId}": {
      "get": {
        "summary": "Get table by ID",
        "description": "Get table by ID",
        "parameters": [
          {
            "name": "tableId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Fetched table",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TableResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "authorizer": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy",
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:905418349556:function:api_handler/invocations",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match"
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ReservationCreateRequest": {
        "type": "object",
        "properties": {
          "tableNumber": {
            "type": "integer",
            "description": "Number of the table"
          },
          "clientName": {
            "type": "string",
            "description": "Name of the client"
          },
          "phoneNumber": {
            "type": "string",
            "description": "Phone number of the client"
          },
          "date": {
            "type": "string",
            "format": "date",
            "description": "Date of the reservation"
          },
          "slotTimeStart": {
            "type": "string",
            "description": "Start time of the reservation slot"
          },
          "slotTimeEnd": {
            "type": "string",
            "description": "End time of the reservation slot"
          }
        },
        "required": ["tableNumber", "clientName", "phoneNumber", "date", "slotTimeStart", "slotTimeEnd"]
      },
      "ReservationResponse": {
        "type": "object",
        "properties": {
          "reservationId": {
            "type": "string",
            "format": "uuid",
            "description": "ID of the reservation"
          }
        }
      },
      "ReservationsResponse": {
        "type": "object",
        "properties": {
          "reservations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReservationCreateRequest"
            }
          }
        }
      },
      "TableCreateRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID of the table"
          },
          "number": {
            "type": "integer",
            "description": "Number of the table"
          },
          "places": {
            "type": "integer",
            "description": "Amount of people to sit at the table"
          },
          "isVip": {
            "type": "boolean",
            "description": "Is the table in the VIP hall"
          },
          "minOrder": {
            "type": "integer",
            "description": "Table deposit required to book it",
            "nullable": true
          }
        },
        "required": ["id", "number", "places", "isVip"]
      },
      "TableCreateResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID of the created table"
          }
        }
      },
      "TablesResponse": {
        "type": "object",
        "properties": {
          "tables": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TableCreateRequest"
            }
          }
        }
      },
      "TableResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID of the table"
          },
          "number": {
            "type": "integer",
            "description": "Number of the table"
          },
          "places": {
            "type": "integer",
            "description": "Amount of people to sit at the table"
          },
          "isVip": {
            "type": "boolean",
            "description": "Is the table in the VIP hall"
          },
          "minOrder": {
            "type": "integer",
            "description": "Table deposit required to book it",
            "nullable": true
          }
        },
        "required": ["id", "number", "places", "isVip"]
      },
      "SignInRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "Email of the user"
          },
          "password": {
            "type": "string",
            "description": "Password of the user",
            "pattern": "^(?=.*[A-Za-z])(?=.*\\d)(?=.*[$%^*])[A-Za-z\\d$%^*]{12,}$"
          }
        },
        "required": ["email", "password"]
      },
      "SignInResponse": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "description": "Access token for the user"
          }
        }
      },
      "SignUpRequest": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "description": "First name"
          },
          "lastName": {
            "type": "string",
            "description": "Last name"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Email"
          },
          "password": {
            "type": "string",
            "description": "Password",
            "pattern": "^.*$"
          }
        },
        "required": ["firstName", "lastName", "email", "password"]
      },
      "Error": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "Empty": {
        "title": "Empty Schema",
        "type": "object"
      }
    },
    "securitySchemes": {
      "authorizer": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header",
        "x-amazon-apigateway-authtype": "cognito_user_pools",
        "x-amazon-apigateway-authorizer": {
          "type": "cognito_user_pools",
          "x-syndicate-cognito-userpool-names": ["simple-booking-userpool"]
        }
      }
    }
  }
}
      